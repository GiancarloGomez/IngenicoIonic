import { AVSResponse } from "../constants/avs-response";
import { CardVerificationMethod } from "../constants/card-verification-method";
import { CardType } from "../constants/card-type";
import { POSEntryMode } from "../constants/pos-entry-mode";
import { TransactionResponseCode } from "../constants/transaction-response-code";
import { TransactionType } from "../constants/transaction-type";
import { UCIFormat } from "../constants/uci-format";

import { EmvData } from "../data/emv-data";
import { TokenResponseParameters } from "../data/token-response-parameters";
import { Amount } from "../data/amount";

export class TransactionResponse {
    /*!
     *  Amount the host has authorized for this transaction.
     *  Note: This amount may be less than the amount originally requested in the transaction request
     *  amount for partial approvals.
     */
    authorizedAmount: number;
    /*!
     * Authorization code from processor.
     */
    authCode: string;
    /*!
     * Reference for the transaction generated by Ingenico Payment Services.
     */
    transactionID: string;
    /*!
     * Reference for the Invoice generated by Ingenico Payment Server.
     */
    invoiceID: string;
    /*!
     * Reference for a group of related transactions (like split-tender) that are linked.
     * If not specified in the request, it will be generated and returned in the response.
     */
    transactionGroupID: string;
    /*!
     * The message to be displayed on merchant's device/console.
     */
    clerkDisplay: string;
    /*!
     * Reference for the Transaction generated by Ingenico mPOS SDK.
     */
    clientTransactionID: string;
    /*!
     * Reference for the Transaction sequence number generated by Ingenico payment services.
     */
    sequenceNumber: string;
    /*!
     * The card verification method for the transaction
     * @see CardVerificationMethod
     */
    cardVerificationMethod: CardVerificationMethod;
    /*!
     * The pos entry mode
     * @see RoamPOSEntryMode
     */
    posEntryMode: POSEntryMode;
    /*!
     * Returns the redacted number of the card used to make this transaction
     */
    redactedCardNumber: string;
    /*!
     * Returns the expiration date of the card used to make this transaction
     */
    cardExpirationDate: string;
    /*!
     * Available Balance on the card used for the transaction (Gift Cards, Prepaid Credit Cards, etc.,) returned by the processor
     */
    availableBalance: number;
    /*!
     * Amount object submitted during the transaction request.
     * @see Amount
     */
    submittedAmount: Amount;
    /*!
     * Object containing the response of token request.
     * @see TokenResponseParameters
     */
    tokenResponseParameters: TokenResponseParameters;
    /*!
     * GUID Reference for the transaction generated by Ingenico Payment Services.
     */
    transactionGUID: string;
    /*!
     * The response generated by Ingenico Payment Server.
     * i.e. Approved or Declined
     * @see TransactionResponseCode
     */
    transactionResponseCode: TransactionResponseCode;
    /*!
     * The card type.
     * @see CardType
     */
    cardType: CardType;
    /*!
     * Returns emv data which could be printed on the receipt
     * @see EmvData
     */
    emvData: EmvData;
    /*!
     * Returns the AVS response
     * @see AVSResponse
     */
    avsResponse: AVSResponse;
    /*!
     * Returns the Unique Card Identifier Format
     * @see UCIFormat
     */
    uciFormat: UCIFormat;
    /*!
     * Returns the Unique identifier for the card number
     */
    uniqueCardIdentifier: string;
    /*!
     * Returns the card holder name
     */
    cardholderName: string;
    /*!
     * Returns the batch number.
     */
    batchNumber: string;
    /*!
    * Returns the transaction type
     * @see TransactionType
     */
    transactionType: TransactionType;
}